{"version":3,"sources":["webpack:///./src/components/ui/InfoBlock/styles.js","webpack:///./src/components/ui/InfoBlock/index.js","webpack:///./src/components/ui/Banner/styles.js","webpack:///./src/components/ui/Banner/index.js","webpack:///./src/components/HeroBanner/index.js","webpack:///./src/components/Services/styles.js","webpack:///./src/components/Services/index.js","webpack:///./src/pages/index.tsx","webpack:///./src/components/utils/FormatHtml/index.js"],"names":["InfoBlock","styled","div","center","Icon","span","Wrapper","Title","h3","Content","p","icon","title","content","Banner","section","subtitle","linkTo","linkText","Container","TitleSection","map","val","to","Button","primary","HeroBanner","heroBanner","markdownRemark","frontmatter","heroText","Services","ServiceItem","allMarkdownRemark","sectionTitle","services","edges","item","node","id","description","key","IndexPage","Layout","SEO","FormatHtml","className","dangerouslySetInnerHTML","__html"],"mappings":"+IAGaA,EAAYC,IAAOC,IAAV,oEAAGD,CAAH,aAChB,6NACF,qBAAGE,QAAyB,yBAGnBC,EAAOH,IAAOI,KAAV,+DAAGJ,CAAH,SACX,iLAGOK,EAAUL,IAAOC,IAAV,kEAAGD,CAAH,UAChB,qBAAGE,QAAyB,wBAGnBI,EAAQN,IAAOO,GAAV,gEAAGP,CAAH,SACZ,wCAGOQ,EAAUR,IAAOS,EAAV,kEAAGT,CAAH,SACd,uBCKSD,IAnBG,SAAC,GAAD,IAAGW,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,QAASV,EAAzB,EAAyBA,OAAzB,OAChB,kBAAC,EAAD,CAAkBA,OAAQA,GACxB,kBAAC,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMO,KAAMA,KAEd,kBAAC,EAAD,CAAgBR,OAAQA,GACtB,kBAAC,EAAD,KAAeS,GACf,kBAAC,EAAD,KAAiBC,O,8vFCXVC,EAASb,IAAOc,QAAV,iEAAGd,CAAH,SACb,2EAGOQ,EAAUR,IAAOS,EAAV,kEAAGT,CAAH,SACd,uBC8BSa,EA3BA,SAAC,GAAD,IAAGF,EAAH,EAAGA,MAAOI,EAAV,EAAUA,SAAUH,EAApB,EAAoBA,QAASI,EAA7B,EAA6BA,OAAQC,EAArC,EAAqCA,SAArC,OACb,kBAAC,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWJ,SAAO,GAChB,kBAACK,EAAA,EAAD,CAAcR,MAAOA,EAAOI,SAAUA,IACtC,kBAAC,EAAD,KACGH,EAAQQ,KAAI,SAACC,GAAD,OACX,2BAAIA,OAMR,kBAAC,OAAD,CAAMC,GAAIN,GACR,kBAACO,EAAA,EAAD,CAAQC,SAAO,GAAEP,OCmBVQ,EArCI,WAAO,IAgBlBC,EAhBiB,OACfC,eAe0BC,YAElC,OACE,kBAAC,EAAD,CACEjB,MAAOe,EAAWf,MAClBI,SAAUW,EAAWX,SACrBH,QAASc,EAAWG,SACpBb,OAAQU,EAAWV,OACnBC,SAAUS,EAAWT,Y,wBC3Bda,EAAW9B,IAAOC,IAAV,sEAAGD,CAAH,SACf,+EAGO+B,EAAc/B,IAAOC,IAAV,yEAAGD,CAAH,SAClB,0DCiDS8B,EAhDE,WAAO,IAAD,SACbH,EADa,EACbA,eAAgBK,EADH,EACGA,kBAuBlBC,EAAeN,EAAeC,YAC9BM,EAAWF,EAAkBG,MAEnC,OACE,kBAACjB,EAAA,EAAD,CAAWJ,SAAO,GAChB,kBAACK,EAAA,EAAD,CAAcR,MAAOsB,EAAatB,MAAOI,SAAUkB,EAAalB,SAAUb,QAAM,IAChF,kBAAC,EAAD,KACGgC,EAASd,KAAI,SAACgB,GAAU,IAAD,EAIlBA,EAAKC,KAFPC,EAFoB,EAEpBA,GAFoB,IAGpBV,YAAejB,EAHK,EAGLA,MAAOD,EAHF,EAGEA,KAAM6B,EAHR,EAGQA,YAG9B,OACE,kBAAC,EAAD,CAAoBC,IAAKF,GACvB,kBAACvC,EAAA,EAAD,CAAWW,KAAMA,EAAMC,MAAOA,EAAOC,QAAS2B,WC5B7CE,UAZa,WAC1B,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKhC,MAAM,aACX,kBAAC,EAAD,MACA,kBAAC,EAAD,S,kCCbN,yBAgBeiC,IAbI,SAAC,GAAD,IAAGhC,EAAH,EAAGA,QAAH,OACjB,0BACEiC,UAAU,cACVC,wBAAyB,CACvBC,OAAQnC","file":"component---src-pages-index-tsx-1ffaaaaf34a2dfae2f94.js","sourcesContent":["import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport const InfoBlock = styled.div`\n  ${tw`flex flex-col my-4 mx-3 p-4 bg-white rounded-lg border border-gray-300`};\n  ${({ center }) => center && tw`items-center`};\n`;\n\nexport const Icon = styled.span`\n  ${tw`flex items-center justify-center w-10 h-10 border border-pink-500 rounded-full mb-2`};\n`;\n\nexport const Wrapper = styled.div`\n  ${({ center }) => center && tw`text-center`};\n`;\n\nexport const Title = styled.h3`\n  ${tw`text-md mt-1 font-semibold`};\n`;\n\nexport const Content = styled.p`\n  ${tw`mt-1`};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Icon from 'components/ui/Icon';\n\nimport * as Styled from './styles';\n\nconst InfoBlock = ({ icon, title, content, center }) => (\n  <Styled.InfoBlock center={center}>\n    <Styled.Icon>\n      <Icon icon={icon} />\n    </Styled.Icon>\n    <Styled.Wrapper center={center}>\n      <Styled.Title>{title}</Styled.Title>\n      <Styled.Content>{content}</Styled.Content>\n    </Styled.Wrapper>\n  </Styled.InfoBlock>\n);\n\nInfoBlock.propTypes = {\n  center: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n  content: PropTypes.any.isRequired,\n  icon: PropTypes.string.isRequired\n};\n\nexport default InfoBlock;\n","import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport const Banner = styled.section`\n  ${tw`bg-gray-100 border-b border-indigo-100 `};\n`;\n\nexport const Content = styled.p`\n  ${tw`mb-8`};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nimport Container from 'components/ui/Container';\nimport Button from 'components/ui/Button';\nimport TitleSection from 'components/ui/TitleSection';\nimport FormatHtml from 'components/utils/FormatHtml';\n\nimport * as Styled from './styles';\n\nconst Banner = ({ title, subtitle, content, linkTo, linkText }) => (\n  <Styled.Banner>\n    <Container section>\n      <TitleSection title={title} subtitle={subtitle} />\n      <Styled.Content>\n        {content.map((val) => (\n          <p>{val}</p>\n        ))}\n      </Styled.Content>\n      {/* <Styled.Content>\n        <FormatHtml content={`<div>${html}</div>`} />\n      </Styled.Content> */}\n      <Link to={linkTo}>\n        <Button primary>{linkText}</Button>\n      </Link>\n    </Container>\n  </Styled.Banner>\n);\n\nBanner.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string,\n  content: PropTypes.any.isRequired,\n  linkTo: PropTypes.string.isRequired,\n  linkText: PropTypes.string.isRequired\n};\n\nexport default Banner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Banner from 'components/ui/Banner';\n\nconst HeroBanner = () => {\n  const { markdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"hero section\" } }) {\n        html\n        frontmatter {\n          title\n          subtitle\n          heroText\n          linkTo\n          linkText\n        }\n      }\n    }\n  `);\n\n  const heroBanner = markdownRemark.frontmatter;\n\n  return (\n    <Banner\n      title={heroBanner.title}\n      subtitle={heroBanner.subtitle}\n      content={heroBanner.heroText}\n      linkTo={heroBanner.linkTo}\n      linkText={heroBanner.linkText}\n    />\n  );\n};\n\nHeroBanner.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  linkTo: PropTypes.string.isRequired,\n  linkText: PropTypes.string.isRequired\n};\n\nexport default HeroBanner;\n","import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport const Services = styled.div`\n  ${tw`flex flex-wrap -mx-3`};\n`;\n\nexport const ServiceItem = styled.div`\n  ${tw`w-full sm:w-1/2`};\n`;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport InfoBlock from 'components/ui/InfoBlock';\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\n\nimport * as Styled from './styles';\n\nconst Services = () => {\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"services section\" } }) {\n        frontmatter {\n          title\n          subtitle\n        }\n      }\n      allMarkdownRemark(filter: { frontmatter: { category: { eq: \"services\" } } }, sort: { fields: fileAbsolutePath }) {\n        edges {\n          node {\n            id\n            frontmatter {\n              title\n              icon\n              description\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectionTitle = markdownRemark.frontmatter;\n  const services = allMarkdownRemark.edges;\n\n  return (\n    <Container section>\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} center />\n      <Styled.Services>\n        {services.map((item) => {\n          const {\n            id,\n            frontmatter: { title, icon, description }\n          } = item.node;\n\n          return (\n            <Styled.ServiceItem key={id}>\n              <InfoBlock icon={icon} title={title} content={description} />\n            </Styled.ServiceItem>\n          );\n        })}\n      </Styled.Services>\n    </Container>\n  );\n};\n\nexport default Services;\n","import React from 'react';\n\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport HeroBanner from 'components/HeroBanner';\nimport Services from 'components/Services';\nimport Testimonials from 'components/Testimonials';\n\nconst IndexPage: React.FC = () => {\n  return (\n    <Layout>\n      <SEO title=\"About Me\" />\n      <HeroBanner />\n      <Services />\n      {/* <hr />\n      <Testimonials /> */}\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FormatHtml = ({ content }) => (\n  <span\n    className=\"format-html\"\n    dangerouslySetInnerHTML={{\n      __html: content\n    }}\n  />\n);\n\nFormatHtml.propTypes = {\n  content: PropTypes.any.isRequired\n};\n\nexport default FormatHtml;\n"],"sourceRoot":""}