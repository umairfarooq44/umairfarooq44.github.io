{"version":3,"sources":["webpack:///./src/components/ui/Timeline/styles.js","webpack:///./src/components/ui/Timeline/index.js","webpack:///./src/components/Experience/index.js","webpack:///./src/components/Education/index.js","webpack:///./src/components/ui/ProgressBar/styles.js","webpack:///./src/components/ui/ProgressBar/index.js","webpack:///./src/components/Skills/styles.js","webpack:///./src/components/Skills/index.js","webpack:///./src/components/Portfolio/styles.js","webpack:///./src/components/Portfolio/index.js","webpack:///./src/pages/resume.tsx","webpack:///./src/components/utils/FormatHtml/index.js"],"names":["Timeline","styled","div","Details","Content","Title","Subtitle","Date","Point","span","title","subtitle","content","startDate","endDate","Experience","markdownRemark","allMarkdownRemark","sectionTitle","frontmatter","experiences","edges","Container","section","TitleSection","map","item","node","id","html","company","position","key","FormatHtml","Education","education","university","degree","ProgressBar","BarWrapper","Bar","percentage","h3","Percentage","Skills","Skill","skills","center","Posts","Post","Card","Image","figure","Description","p","Tags","Tag","posts","cover","description","date","tags","url","href","target","whileHover","scale","whileTap","fluid","childImageSharp","alt","ResumePage","Layout","SEO","Portfolio","className","dangerouslySetInnerHTML","__html"],"mappings":"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","file":"component---src-pages-resume-tsx-19fd7d86d0540c9b043d.js","sourcesContent":["import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport const Timeline = styled.div`\n  ${tw`flex flex-col sm:flex-row w-full p-4 relative border-l border-indigo-200`};\n\n  &:last-child {\n    ${tw`pb-0`};\n  }\n`;\n\nexport const Details = styled.div`\n  ${tw`w-full sm:w-1/3`};\n`;\n\nexport const Content = styled.div`\n  ${tw`w-full sm:w-2/3 mt-4 sm:mt-0`};\n`;\n\nexport const Title = styled.div`\n  ${tw`font-semibold mt-3`};\n`;\n\nexport const Subtitle = styled.div`\n  ${tw`text-xs`};\n`;\n\nexport const Date = styled.div`\n  ${tw`text-xs border border-pink-500 rounded-full px-2`};\n  width: fit-content;\n`;\n\nexport const Point = styled.span`\n  ${tw`w-3 h-3 border border-indigo-200 bg-indigo-100 rounded-full absolute`};\n  left: -6px;\n  top: 20px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as Styled from './styles';\n\nconst Timeline = ({ title, subtitle, content, startDate, endDate }) => (\n  <Styled.Timeline>\n    <Styled.Point />\n    <Styled.Details>\n      <Styled.Date>\n        {startDate} - {endDate}\n      </Styled.Date>\n      <Styled.Title>{title}</Styled.Title>\n      <Styled.Subtitle>{subtitle}</Styled.Subtitle>\n    </Styled.Details>\n    <Styled.Content>{content}</Styled.Content>\n  </Styled.Timeline>\n);\n\nTimeline.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string.isRequired,\n  content: PropTypes.any.isRequired,\n  startDate: PropTypes.string.isRequired,\n  endDate: PropTypes.string.isRequired\n};\n\nexport default Timeline;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Timeline from 'components/ui/Timeline';\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\nimport FormatHtml from 'components/utils/FormatHtml';\n\nconst Experience = () => {\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"experiences section\" } }) {\n        frontmatter {\n          title\n          subtitle\n        }\n      }\n      allMarkdownRemark(\n        filter: { frontmatter: { category: { eq: \"experiences\" } } }\n        sort: { order: DESC, fields: fileAbsolutePath }\n      ) {\n        edges {\n          node {\n            id\n            html\n            frontmatter {\n              company\n              position\n              startDate\n              endDate\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectionTitle = markdownRemark.frontmatter;\n  const experiences = allMarkdownRemark.edges;\n\n  return (\n    <Container section>\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} />\n\n      {experiences.map((item) => {\n        const {\n          id,\n          html,\n          frontmatter: { company, position, startDate, endDate }\n        } = item.node;\n\n        return (\n          <Timeline\n            key={id}\n            title={company}\n            subtitle={position}\n            content={<FormatHtml content={html} />}\n            startDate={startDate}\n            endDate={endDate}\n          />\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default Experience;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Timeline from 'components/ui/Timeline';\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\nimport FormatHtml from 'components/utils/FormatHtml';\n\nconst Education = () => {\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"education section\" } }) {\n        frontmatter {\n          title\n          subtitle\n        }\n      }\n      allMarkdownRemark(\n        filter: { frontmatter: { category: { eq: \"education\" } } }\n        sort: { order: DESC, fields: fileAbsolutePath }\n      ) {\n        edges {\n          node {\n            id\n            html\n            frontmatter {\n              university\n              degree\n              startDate\n              endDate\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectionTitle = markdownRemark.frontmatter;\n  const education = allMarkdownRemark.edges;\n\n  return (\n    <Container section>\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} />\n\n      {education.map((item) => {\n        const {\n          id,\n          html,\n          frontmatter: { university, degree, startDate, endDate }\n        } = item.node;\n\n        return (\n          <Timeline\n            key={id}\n            title={university}\n            subtitle={degree}\n            content={<FormatHtml content={html} />}\n            startDate={startDate}\n            endDate={endDate}\n          />\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default Education;\n","import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport const ProgressBar = styled.div`\n  ${tw`p-3`};\n`;\n\nexport const BarWrapper = styled.div`\n  ${tw`w-full h-2 bg-gray-300 rounded overflow-hidden mt-1`};\n`;\n\nexport const Bar = styled.div`\n  ${tw`h-2 bg-pink-400`};\n  width: ${({ percentage }) => `${percentage}%`};\n`;\n\nexport const Content = styled.div`\n  ${tw`w-full flex justify-between`};\n`;\n\nexport const Title = styled.h3`\n  ${tw`font-semibold`};\n`;\n\nexport const Percentage = styled.h3`\n  ${tw`font-semibold`};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as Styled from './styles';\n\nconst ProgressBar = ({ title, percentage }) => (\n  <Styled.ProgressBar>\n    <Styled.Content>\n      <Styled.Title>{title}</Styled.Title>\n      <Styled.Percentage>{percentage}%</Styled.Percentage>\n    </Styled.Content>\n    <Styled.BarWrapper>\n      <Styled.Bar percentage={percentage} />\n    </Styled.BarWrapper>\n  </Styled.ProgressBar>\n);\n\nProgressBar.propTypes = {\n  title: PropTypes.string.isRequired,\n  percentage: PropTypes.number.isRequired\n};\n\nexport default ProgressBar;\n","import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport const Skills = styled.div`\n  ${tw`flex flex-wrap w-full`};\n`;\n\nexport const Skill = styled.div`\n  ${tw`w-full sm:w-1/2`};\n`;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\nimport ProgressBar from 'components/ui/ProgressBar';\n\nimport * as Styled from './styles';\n\nconst Skills = () => {\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"skills section\" } }) {\n        frontmatter {\n          title\n          subtitle\n        }\n      }\n      allMarkdownRemark(filter: { frontmatter: { category: { eq: \"skills\" } } }, sort: { fields: fileAbsolutePath }) {\n        edges {\n          node {\n            id\n            frontmatter {\n              title\n              percentage\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectionTitle = markdownRemark.frontmatter;\n  const skills = allMarkdownRemark.edges;\n\n  return (\n    <Container section>\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} center />\n      <Styled.Skills>\n        {skills.map((item) => {\n          const {\n            id,\n            frontmatter: { title, percentage }\n          } = item.node;\n\n          return (\n            <Styled.Skill key={id}>\n              <ProgressBar title={title} percentage={percentage} />\n            </Styled.Skill>\n          );\n        })}\n      </Styled.Skills>\n    </Container>\n  );\n};\n\nexport default Skills;\n","import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport const Posts = styled.div`\n  ${tw`w-full flex flex-wrap`};\n`;\n\nexport const Post = styled.div`\n  ${tw`w-full sm:w-1/2 p-3`};\n`;\n\nexport const Card = styled.div`\n  ${tw`w-full h-full rounded-lg flex flex-col overflow-hidden border border-gray-300`};\n`;\n\nexport const Content = styled.div`\n  ${tw`p-4 text-indigo-900`};\n`;\n\nexport const Image = styled.figure`\n  ${tw`w-full`};\n`;\n\nexport const Title = styled.h3`\n  ${tw`font-semibold mb-4`};\n`;\n\nexport const Description = styled.p``;\n\nexport const Date = styled.h3`\n  ${tw`text-xs text-pink-500`};\n`;\n\nexport const Tags = styled.div`\n  ${tw`p-4 pt-2 mt-auto`}\n  overflow-wrap: anywhere;\n`;\n\nexport const Tag = styled.span`\n  ${tw`text-xs text-indigo-900 border border-pink-500 rounded-full px-2 py-1 mr-2`}\n  white-space: nowrap;\n  padding-top: 0.1rem;\n  padding-bottom: 0.1rem;\n  display: inline-block;\n  margin-bottom: 4px;\n`;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport { motion } from 'framer-motion';\n\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\n\nimport * as Styled from './styles';\n\nconst Posts = () => {\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"portfolio section\" } }) {\n        frontmatter {\n          title\n          subtitle\n        }\n      }\n      allMarkdownRemark(\n        filter: { frontmatter: { category: { eq: \"portfolio\" } } }\n        sort: { fields: frontmatter___order, order: DESC }\n      ) {\n        edges {\n          node {\n            id\n            html\n            fields {\n              slug\n            }\n            frontmatter {\n              title\n              description\n              date(formatString: \"MMM DD, YYYY\")\n              tags\n              url\n              cover {\n                childImageSharp {\n                  fluid(maxWidth: 800) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectionTitle = markdownRemark.frontmatter;\n  const posts = allMarkdownRemark.edges;\n\n  return (\n    <Container section>\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} center />\n      <Styled.Posts>\n        {posts.map((item) => {\n          const {\n            id,\n            frontmatter: { title, cover, description, date, tags, url }\n          } = item.node;\n\n          return (\n            <Styled.Post key={id}>\n              <a href={url} target=\"blank\">\n                <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 1 }}>\n                  <Styled.Card>\n                    <Styled.Image>\n                      <Img fluid={cover.childImageSharp.fluid} alt={title} />\n                    </Styled.Image>\n                    <Styled.Content>\n                      <Styled.Date>{date}</Styled.Date>\n                      <Styled.Title>{title}</Styled.Title>\n                      <Styled.Description>{description}</Styled.Description>\n                    </Styled.Content>\n                    <Styled.Tags>\n                      {tags.map((item) => (\n                        <Styled.Tag key={item}>{item}</Styled.Tag>\n                      ))}\n                    </Styled.Tags>\n                  </Styled.Card>\n                </motion.div>\n              </a>\n            </Styled.Post>\n          );\n        })}\n      </Styled.Posts>\n    </Container>\n  );\n};\n\nexport default Posts;\n","import React from 'react';\n\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport Experience from 'components/Experience';\nimport Education from 'components/Education';\nimport Skills from 'components/Skills';\nimport Portfolio from 'components/Portfolio';\n\nconst ResumePage: React.FC = () => (\n  <Layout>\n    <SEO title=\"Resume\" />\n    <Experience />\n    <hr />\n    <Education />\n    <hr />\n    <Skills />\n    <hr />\n    <Portfolio />\n  </Layout>\n);\n\nexport default ResumePage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FormatHtml = ({ content }) => (\n  <span\n    className=\"format-html\"\n    dangerouslySetInnerHTML={{\n      __html: content\n    }}\n  />\n);\n\nFormatHtml.propTypes = {\n  content: PropTypes.any.isRequired\n};\n\nexport default FormatHtml;\n"],"sourceRoot":""}