{"version":3,"sources":["webpack:///./src/components/ContactInfo/styles.js","webpack:///./src/components/ContactInfo/index.js","webpack:///./src/pages/contact.tsx","webpack:///./src/components/ui/InfoBlock/styles.js","webpack:///./src/components/ui/InfoBlock/index.js"],"names":["ContactInfoItem","styled","div","ConctactInfo","useStaticQuery","markdownRemark","allMarkdownRemark","sectionTitle","frontmatter","contacts","edges","Container","section","TitleSection","title","subtitle","center","map","item","node","id","icon","content","key","InfoBlock","ContactPage","Layout","SEO","ContactInfo","Icon","span","Wrapper","Title","h3","Content","p"],"mappings":"sMAGaA,E,UAAkBC,EAAOC,IAAG,8EAAVD,CAAU,SACnC,0DCmDSE,EA9CM,WACnB,MAA8CC,yBAAe,cAArDC,EAAc,EAAdA,eAAgBC,EAAiB,EAAjBA,kBAuBlBC,EAAeF,EAAeG,YAC9BC,EAAWH,EAAkBI,MAEnC,OACE,kBAACC,EAAA,EAAS,CAACC,SAAO,GAChB,kBAACC,EAAA,EAAY,CAACC,MAAOP,EAAaO,MAAOC,SAAUR,EAAaQ,SAAUC,QAAM,IAC/EP,EAASQ,KAAI,SAACC,GACb,MAGIA,EAAKC,KAFPC,EAAE,EAAFA,GAAG,EAAD,EACFZ,YAAeM,EAAK,EAALA,MAAOO,EAAI,EAAJA,KAAMC,EAAO,EAAPA,QAG9B,OACE,kBAAC,EAAsB,CAACC,IAAKH,GAC3B,kBAACI,EAAA,EAAS,CAACH,KAAMA,EAAMP,MAAOA,EAAOQ,QAASA,EAASN,QAAM,UChC1DS,UATe,WAC5B,OACE,kBAACC,EAAA,EAAM,KACL,kBAACC,EAAA,EAAG,CAACb,MAAM,YACX,kBAACc,EAAW,S,qFCPLJ,EAAYvB,IAAOC,IAAG,uEAAVD,CAAU,aAC7B,6NACF,YAAS,SAANe,QAAyB,yBAGnBa,EAAO5B,IAAO6B,KAAI,kEAAX7B,CAAW,SACzB,iLAGO8B,EAAU9B,IAAOC,IAAG,qEAAVD,CAAU,UAC7B,YAAS,SAANe,QAAyB,wBAGnBgB,EAAQ/B,IAAOgC,GAAE,mEAAThC,CAAS,SACxB,wCAGOiC,EAAUjC,IAAOkC,EAAC,qEAARlC,CAAQ,SACzB,uBCKSuB,IAnBG,SAAH,OAAMH,EAAI,EAAJA,KAAMP,EAAK,EAALA,MAAOQ,EAAO,EAAPA,QAASN,EAAM,EAANA,OAAM,OAC/C,kBAAC,EAAgB,CAACA,OAAQA,GACxB,kBAAC,EAAW,KACV,kBAACa,EAAA,EAAI,CAACR,KAAMA,KAEd,kBAAC,EAAc,CAACL,OAAQA,GACtB,kBAAC,EAAY,KAAEF,GACf,kBAAC,EAAc,KAAEQ","file":"component---src-pages-contact-tsx-49547450a0d85776b721.js","sourcesContent":["import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport const ContactInfoItem = styled.div`\n  ${tw`w-full sm:w-1/2`};\n`;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport InfoBlock from 'components/ui/InfoBlock';\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\n\nimport * as Styled from './styles';\n\nconst ConctactInfo = () => {\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"contact section\" } }) {\n        frontmatter {\n          title\n          subtitle\n        }\n      }\n      allMarkdownRemark(filter: { frontmatter: { category: { eq: \"contact\" } } }, sort: { fields: fileAbsolutePath }) {\n        edges {\n          node {\n            id\n            frontmatter {\n              title\n              icon\n              content\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectionTitle = markdownRemark.frontmatter;\n  const contacts = allMarkdownRemark.edges;\n\n  return (\n    <Container section>\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} center />\n      {contacts.map((item) => {\n        const {\n          id,\n          frontmatter: { title, icon, content }\n        } = item.node;\n\n        return (\n          <Styled.ContactInfoItem key={id}>\n            <InfoBlock icon={icon} title={title} content={content} center />\n          </Styled.ContactInfoItem>\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default ConctactInfo;\n","import React from 'react';\n\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport ContactInfo from 'components/ContactInfo';\n\nconst ContactPage: React.FC = () => {\n  return (\n    <Layout>\n      <SEO title=\"Contact\" />\n      <ContactInfo />\n    </Layout>\n  );\n};\n\nexport default ContactPage;\n","import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport const InfoBlock = styled.div`\n  ${tw`flex flex-col my-4 mx-3 p-4 bg-white rounded-lg border border-gray-300`};\n  ${({ center }) => center && tw`items-center`};\n`;\n\nexport const Icon = styled.span`\n  ${tw`flex items-center justify-center w-10 h-10 border border-pink-500 rounded-full mb-2`};\n`;\n\nexport const Wrapper = styled.div`\n  ${({ center }) => center && tw`text-center`};\n`;\n\nexport const Title = styled.h3`\n  ${tw`text-md mt-1 font-semibold`};\n`;\n\nexport const Content = styled.p`\n  ${tw`mt-1`};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Icon from 'components/ui/Icon';\n\nimport * as Styled from './styles';\n\nconst InfoBlock = ({ icon, title, content, center }) => (\n  <Styled.InfoBlock center={center}>\n    <Styled.Icon>\n      <Icon icon={icon} />\n    </Styled.Icon>\n    <Styled.Wrapper center={center}>\n      <Styled.Title>{title}</Styled.Title>\n      <Styled.Content>{content}</Styled.Content>\n    </Styled.Wrapper>\n  </Styled.InfoBlock>\n);\n\nInfoBlock.propTypes = {\n  center: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n  content: PropTypes.any.isRequired,\n  icon: PropTypes.string.isRequired\n};\n\nexport default InfoBlock;\n"],"sourceRoot":""}