{"version":3,"sources":["webpack:///./src/components/Posts/styles.js","webpack:///./src/components/Posts/index.js","webpack:///./src/pages/blog.tsx"],"names":["Posts","styled","div","Post","Card","Content","Image","figure","Title","h3","Description","p","Date","Tags","Tag","span","sectionTitle","posts","allMediumPost","edges","Container","section","TitleSection","title","subtitle","center","map","item","node","id","createdAt","uniqueSlug","virtuals","tags","description","imageId","previewImage","console","log","key","href","target","whileHover","scale","whileTap","src","alt","name","BlogPage","Layout","SEO"],"mappings":"2oCAGaA,EAAQC,IAAOC,IAAV,gEAAGD,CAAH,SACZ,+CAGOE,EAAOF,IAAOC,IAAV,+DAAGD,CAAH,SACX,4EAGOG,EAAOH,IAAOC,IAAV,+DAAGD,CAAH,SACX,oJAGOI,EAAUJ,IAAOC,IAAV,kEAAGD,CAAH,SACd,kCAGOK,EAAQL,IAAOM,OAAV,gEAAGN,CAAH,SACZ,gBAGOO,EAAQP,IAAOQ,GAAV,gEAAGR,CAAH,SACZ,wCAGOS,EAAcT,IAAOU,EAAV,sEAAGV,CAAH,MAEXW,EAAOX,IAAOQ,GAAV,+DAAGR,CAAH,SACX,sCAGOY,EAAOZ,IAAOC,IAAV,+DAAGD,CAAH,QACX,uDAGOa,EAAMb,IAAOc,KAAV,8DAAGd,CAAH,QACV,iNCmDSD,EAhFD,WAAO,IA4BbgB,EAAwB,OAAxBA,EAA0C,eAC1CC,EA7BY,OACVC,cA4BoBC,MAE5B,OACE,kBAACC,EAAA,EAAD,CAAWC,SAAO,GAChB,kBAACC,EAAA,EAAD,CAAcC,MAAOP,EAAoBQ,SAAUR,EAAuBS,QAAM,IAChF,kBAAC,EAAD,KACGR,EAAMS,KAAI,SAACC,GAAU,IAAD,EAWfA,EAAKC,KATPC,EAFiB,EAEjBA,GACAN,EAHiB,EAGjBA,MACAO,EAJiB,EAIjBA,UACAC,EALiB,EAKjBA,WALiB,IAMjBC,SACEC,EAPe,EAOfA,KACUC,EARK,EAQfV,SACgBW,EATD,EASfC,aAAgBD,QAKpB,OADAE,QAAQC,IAAR,yCAAqDH,GAEnD,kBAAC,EAAD,CAAaI,IAAKV,GAChB,uBAAGW,KAAI,oCAAsCT,EAAcU,OAAO,SAChE,kBAAC,IAAOvC,IAAR,CAAYwC,WAAY,CAAEC,MAAO,MAAQC,SAAU,CAAED,MAAO,IAC1D,kBAAC,EAAD,KACGR,GACC,kBAAC,EAAD,KACE,yBAAKU,IAAG,yCAA2CV,EAAWW,IAAKvB,KAGvE,kBAAC,EAAD,KACE,kBAAC,EAAD,KAAcO,GACd,kBAAC,EAAD,KAAeP,GACf,kBAAC,EAAD,KAAqBW,IAEvB,kBAAC,EAAD,KACGD,EAAKP,KAAI,SAACC,GAAD,OACR,kBAAC,EAAD,CAAYY,IAAKZ,EAAKoB,MAAOpB,EAAKoB,oBC5D3CC,UATY,WACzB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK3B,MAAM,SACX,kBAAC,EAAD","file":"component---src-pages-blog-tsx-c61c0950267aaac1a0da.js","sourcesContent":["import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport const Posts = styled.div`\n  ${tw`w-full flex flex-wrap`};\n`;\n\nexport const Post = styled.div`\n  ${tw`w-full sm:w-1/2 p-3`};\n`;\n\nexport const Card = styled.div`\n  ${tw`w-full h-full rounded-lg flex flex-col overflow-hidden border border-gray-300`};\n`;\n\nexport const Content = styled.div`\n  ${tw`p-4 text-indigo-900`};\n`;\n\nexport const Image = styled.figure`\n  ${tw`w-full`};\n`;\n\nexport const Title = styled.h3`\n  ${tw`font-semibold mb-4`};\n`;\n\nexport const Description = styled.p``;\n\nexport const Date = styled.h3`\n  ${tw`text-xs text-pink-500`};\n`;\n\nexport const Tags = styled.div`\n  ${tw`p-4 pt-2 mt-auto`}\n`;\n\nexport const Tag = styled.span`\n  ${tw`text-xs text-indigo-900 border border-pink-500 rounded-full px-2 py-1 mr-2`}\n`;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { motion } from 'framer-motion';\n\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\n\nimport * as Styled from './styles';\n\nconst Posts = () => {\n  const { allMediumPost } = useStaticQuery(graphql`\n    query {\n      allMediumPost(sort: { fields: [createdAt], order: DESC }) {\n        edges {\n          node {\n            id\n            title\n            uniqueSlug\n            createdAt(formatString: \"DD MMMM YYYY\")\n            virtuals {\n              subtitle\n              tags {\n                name\n              }\n              previewImage {\n                imageId\n              }\n            }\n            author {\n              name\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectionTitle = { title: 'Blog', subtitle: 'All my posts' };\n  const posts = allMediumPost.edges;\n\n  return (\n    <Container section>\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} center />\n      <Styled.Posts>\n        {posts.map((item) => {\n          const {\n            id,\n            title,\n            createdAt,\n            uniqueSlug,\n            virtuals: {\n              tags,\n              subtitle: description,\n              previewImage: { imageId }\n            }\n          } = item.node;\n\n          console.log(`https://miro.medium.com/fit/c/800/400/${imageId}`);\n          return (\n            <Styled.Post key={id}>\n              <a href={`https://medium.com/@umair_farooq/${uniqueSlug}`} target=\"blank\">\n                <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 1 }}>\n                  <Styled.Card>\n                    {imageId && (\n                      <Styled.Image>\n                        <img src={`https://miro.medium.com/fit/c/800/400/${imageId}`} alt={title} />\n                      </Styled.Image>\n                    )}\n                    <Styled.Content>\n                      <Styled.Date>{createdAt}</Styled.Date>\n                      <Styled.Title>{title}</Styled.Title>\n                      <Styled.Description>{description}</Styled.Description>\n                    </Styled.Content>\n                    <Styled.Tags>\n                      {tags.map((item) => (\n                        <Styled.Tag key={item.name}>{item.name}</Styled.Tag>\n                      ))}\n                    </Styled.Tags>\n                  </Styled.Card>\n                </motion.div>\n              </a>\n            </Styled.Post>\n          );\n        })}\n      </Styled.Posts>\n    </Container>\n  );\n};\n\nexport default Posts;\n","import React from 'react';\n\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport Posts from 'components/Posts';\n\nconst BlogPage: React.FC = () => {\n  return (\n    <Layout>\n      <SEO title=\"Blog\" />\n      <Posts />\n    </Layout>\n  );\n};\n\nexport default BlogPage;\n"],"sourceRoot":""}